version: '3.4'

networks:
  backend:
  frontend:

services:
  customerdb:
    container_name: customer-db
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Admin123@
    networks:
      - backend
    ports:
      - 18001:1433

  customerwebapi:
    container_name: customer-api
    image: ${DOCKER_REGISTRY-}customerwebapi
    build:
      context: .
      dockerfile: CustomerWebApi/Dockerfile
    networks:
      - backend
    ports:
      - 18002:1433
    environment:
      - DB_HOST=customerdb
      - DB_NAME=dms_customer
      - DB_SA_PASSWORD=Admin123@
 
  productdb:
    container_name: product-db
    image: mysql:8.0.32-oracle
    environment:
     - MYSQL_ROOT_PASSWORD=Admin123@
    ports:
     - 18003:3306
    networks:
     - backend

  productwebapi:
    container_name: product-api
    image: ${DOCKER_REGISTRY-}productwebapi
    build:
      context: .
      dockerfile: ProductWebApi/Dockerfile
    networks:
      - backend
    ports:
      - 18004:1433
    environment:
      - DB_HOST=productdb
      - DB_NAME=dms_product
      - DB_ROOT_PASSWORD=Admin123@

  orderdb:
    container_name: order-db
    image: mongo
    ports:
      - 18005:27017
    networks:
      - backend

  orderwebapi:
    container_name: order-api
    image: ${DOCKER_REGISTRY-}orderwebapi
    build:
      context: .
      dockerfile: OrderWebApi/Dockerfile
    networks:
      - backend
    ports:
      - 18006:27017
    environment:
      - DB_HOST=orderdb
      - DB_NAME=dms_order 



  


